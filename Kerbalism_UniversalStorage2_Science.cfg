
@KERBALISM_EXPERIMENT_VALUES:NEEDS[UniversalStorage2,FeatureScience]:FIRST
{
  %UniversalStorage2
  {
    USCameraPicture
    {
      size = 2
      duration = 1
      ECCost = 2.5
      requirements =
    }
  }
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UniversalStorage2,FeatureScience]:FIRST
{
  %UniversalStorage2
  {
    USlaserAltimeter
    {
      size = 550
      duration = 3600
      ECCost = 0.3
      requirements = SunAngleMin:30
    }
  }
}

// You need to patch the experiment definition with the data size 
// so the experiment module data_rate combined with it gives the right duration.
// Note that even if you don't use Kerbalism's Experiment module, it is recommended to set this anyway
// because data / sample size is usually not balanced against Kerbalism's drives capacities.
@EXPERIMENT_DEFINITION:HAS[#id[UStemperatureScan]]:NEEDS[UniversalStorage2,FeatureScience,GrimerXScienceDefs]:FOR[zzzKerbalismDefault]
{
  @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/size$
  @dataScale /= #$baseValue$
  
  // This is optional, see full documentation further in this document.
    KERBALISM_EXPERIMENT
	{
    Situation = Surface@Biomes
    Situation = FlyingLow@Biomes
    Situation = FlyingHigh@Biomes
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[USbarometerScan]]:NEEDS[UniversalStorage2,FeatureScience,GrimerXScienceDefs]:FOR[zzzKerbalismDefault]
{
  @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/size$
  @dataScale /= #$baseValue$
  
  // This is optional, see full documentation further in this document.
    KERBALISM_EXPERIMENT
	{
    Situation = Surface@Biomes
    Situation = FlyingLow@Biomes
    Situation = FlyingHigh
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[USCameraPicture]]:NEEDS[UniversalStorage2,FeatureScience,GrimerXScienceDefs]:FOR[zzzKerbalismDefault]
{
  @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USCameraPicture/size$
  @dataScale /= #$baseValue$
  
  // This is optional, see full documentation further in this document.
    KERBALISM_EXPERIMENT
	{
    Situation = InSpaceLow@Biomes
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[USlaserAltimeter]]:NEEDS[UniversalStorage2,FeatureScience,GrimerXScienceDefs]:FOR[zzzKerbalismDefault]
{
  @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USlaserAltimeter/size$
  @dataScale /= #$baseValue$
  
  // This is optional, see full documentation further in this document.
    KERBALISM_EXPERIMENT
	{
    Situation = InSpaceLow
	}
}

// Finally, patch your part
@PART[USBasicMicroSatWedge]:NEEDS[UniversalStorage2,FeatureScience]:FOR[KerbalismDefault]
{
    // Add Kerbalism's experiment module
    // See https://github.com/Kerbalism/Kerbalism/wiki/TechGuide-~-PartModules-~-Experiment
    // for the full documentation
    MODULE
    {
      name = Experiment
      experiment_id = UStemperatureScan
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/duration$
      // those values are optional, this is an example :
      ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/ECCost$
      allow_shrouded = True
      requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/requirements$
    }
    
    // Delete the original module (usually it's a stock ModuleScienceExperiment)
    !MODULE[MyNonKerbalismScienceModule] {}
}

@PART[USBasicMicroSatWedge]:NEEDS[UniversalStorage2,FeatureScience]:FOR[KerbalismDefault]
{
    // Add Kerbalism's experiment module
    // See https://github.com/Kerbalism/Kerbalism/wiki/TechGuide-~-PartModules-~-Experiment
    // for the full documentation
    MODULE
    {
      name = Experiment
      experiment_id = USbarometerScan
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/duration$
      // those values are optional, this is an example :
      ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ECCost$
      allow_shrouded = False
      requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/requirements$
    }
    
    // Delete the original module (usually it's a stock ModuleScienceExperiment)
    !MODULE[MyNonKerbalismScienceModule] {}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[UniversalStorage2,FeatureScience]:FOR[KerbalismDefault]
{
    // Add Kerbalism's experiment module
    // See https://github.com/Kerbalism/Kerbalism/wiki/TechGuide-~-PartModules-~-Experiment
    // for the full documentation
    MODULE
    {
      name = Experiment
      experiment_id = USCameraPicture
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USCameraPicture/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USCameraPicture/duration$
      // those values are optional, this is an example :
      ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USCameraPicture/ECCost$
      allow_shrouded = False
      requires = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USCameraPicture/requirements$
    }
    
    // Delete the original module (usually it's a stock ModuleScienceExperiment)
    !MODULE[MyNonKerbalismScienceModule] {}
}

@PART[USMapCamWedge]:NEEDS[UniversalStorage2,FeatureScience]:FOR[KerbalismDefault]
{
    // Add Kerbalism's experiment module
    // See https://github.com/Kerbalism/Kerbalism/wiki/TechGuide-~-PartModules-~-Experiment
    // for the full documentation
    MODULE
    {
      name = Experiment
      experiment_id = USlaserAltimeter
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USlaserAltimeter/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USlaserAltimeter/duration$
      // those values are optional, this is an example :
      ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/UniversalStorage2/USlaserAltimeter/ECCost$
      allow_shrouded = False
    }
    
    // Delete the original module (usually it's a stock ModuleScienceExperiment)
    !MODULE[MyNonKerbalismScienceModule] {}
}